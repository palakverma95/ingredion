sudo st2 run core.remote cmd="/home/bao_net_mon/nw_clogin.sh -noenable -u svc_nucleus_netstk -p wqSz3F4#d8 -c 'show version' $device_ip"  

#!/usr/bin/env python
from lib.base_action import BaseAction
import subprocess
import re
import os

class AddIPtoDevice(BaseAction):
    def __init__(self, config):
        """Creates a new Action given a StackStorm config object (kwargs works too)
        :param config: StackStorm configuration object for the pack
        :returns: a new Action
        """
        super(AddIPtoDevice, self).__init__(config)

    def add_ip_to_device(self, username, password, ci_address, cmd):
        login_output = []
        script_name = "/opt/stackstorm/packs/ntt_monitoring/actions/nw_clogin.sh"
        script_options = '-noenable'
        #command = 'help'
        ip_address=b''
        ip_address=ci_address

        execute_command = subprocess.Popen([script_name, script_options, '-u', username, '-p', password, '-c', cmd, ci_address], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        command_output = execute_command.stdout.readlines()
        print(command_output)
        
    
        


    def run(self, username, password, ci_address, cpu_command):
        ipadd_status = self.add_ip_to_device(username, password, ci_address, cpu_command
        return ipadd_status
  


---
name: "add_ip_to_device"
pack: "ntt_monitoring"
description: "To check the connectivity status to the remote network device"
runner_type: "python-script"
entry_point:  add_ip_to_device.py
enabled: true
parameters:
  username:
    type: string
    description: "Username to login to the remote server"
    required: true
    default: "bao_net_mon"
  password:
    type: string
    description: "Password to login to the remote server"
    required: true
    default: "JJjj1003"
  ci_address:
    type: string
    description: "ci_address of the remote server"
    required: true
  cmd:
    type: string
    description: "command to check the cpu utlization"
    required: true

#!/usr/bin/expect

set timeout 20
spawn ssh svc_nucleus_netstk@10.55.81.1
expect "yes/no" {
        send "yes\r"
        expect "*?assword" {
            send "wqSz3F4#d8\r"
            }
        } "*?assword" {
                send "wqSz3F4#d8/\r"
       }

expect "#" { send "show version\r" }
interact

wrong # args: should be "foreach varList list ?varList list ...? command"

ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 -c 3des-cbc enduser@172.21.50.128

 ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 -c 3des-cbc svc_nucleus_netstk@172.21.50.128

conf t
!
aaa new-model
!
!
aaa group server tacacs+ ING_ISE
 server name 10.16.5.250
 server name 10.16.5.206
exit
!
tacacs-server host 10.16.5.250 key Zr4u7xlA1D
tacacs-server host 10.16.5.206 key Zr4u7xlA1D
!
ip name-server 10.16.5.30
ip name-server 10.16.5.38
!
wr mem
exit

#!/usr/bin/expect

set timeout 20
foreach arg $argv {
spawn ssh username@$arg -b 10.108.1.35
expect "yes/no" {
        send "yes\r"
        expect "*?assword" {
            send "password\r"
            }
        } "*?assword" {
                send "password/\r"
       }

expect "#" { send "show version\r" }

}

#!/bin/bash

array_data=(10.55.81.1)
for (( i=0; i<${#array_data[@]}; i++ ))
do
    expect add_ip_to_device_phase1.expect "${array_data[$i]}"
done

--------phase1--------------------------
expect "#" { send "conf t\r" }
expect "(config)#" { send "!\r" }
expect ")#" { send "aaa new-model\r" }
expect ")#" { send "!\r" }
expect ")#" { send "!\r" }
expect "#" { send "aaa group server tacacs+ ING_ISE\r" }
expect "#" { send "server-private 10.16.5.250 key Zr4u7xlA1D\r" }
expect "#" { send "server-private 10.16.5.206 key Zr4u7xlA1\r" }
expect "#" { send "exit\r" }
expect "#" { send "!\r" }
expect "#" { send "ip name-server 10.16.5.30\r" }
expect "#" { send "ip name-server 10.16.5.38\r" }
expect "#" { send "!\r" }
expect "#" { send "exit\r" }
expect "#" { send "wr\r" }
expect "#" { send "exit\r" }
expect "#" { send "!\r" }









